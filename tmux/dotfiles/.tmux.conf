set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-shell /bin/bash

# Fix Neovim cursor problem
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Refresh status line every one second
set -g status-interval 1

# Setting new Prefix Key
unbind C-b
set -g prefix C-Space

# Reloajing the tmux config file cmd
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Enabling the tmux mouse mode 
# set -g mouse on

# Splitting Panes
unbind v
unbind h

unbind % # Default split vertically
unbind '"' # Default split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Selecting Pane
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# 
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resizing Pane
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Setting history limit
set -g history-limit 100000

# Opening tmux windows
set -s escape-time 0
unbind n # DEFUALT KEY: move to next window
unbind w # DEFUALT KEY: change current window interactively

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# Navigating throw windows
bind -n M-j previous-window
bind -n M-k next-window

# Mode options
set-window-option -g mode-keys vi

# Saving anything to the system clipboard
unbind ]
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"
# For xclip use the following line:
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary \
	| xclip -i -selection clipboard"`
# If you use Wayland, see https://github.com/bugaevc/wl-clipboard

bind p paste-buffer

# List of plugins
# To install plugins press: prefix + I
# To remove plugins press: prefix + alt + u (after remove or comment plugin line)
# To update plugins press: prefix + u

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'olimorris/tmux-pomodoro-plus'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
# set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes. Knwon issue: In order to be executed periodically, the plugin updates the status-right tmux variable. In case some plugin (usually themes) overwrites the status-right variable, the autosa

set -g @catppuccin_flavour 'macchiato'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_left_separator  " █"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"


set -g @catppuccin_directory_text "#{pane_current_path}"


set -g status-right '#[fg=white]#(hostname)@#(host `hostname` | cut -d " " -f 4)'
set -g @catppuccin_status_modules_right "pomodoro session  host user date_time"

run '~/.tmux/plugins/tpm/tpm'
